<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
    <testsuite name="force.apex" timestamp="2018-12-05T21:23:36-05:00" hostname="https://agility-customization-7132-dev-ed.cs40.my.salesforce.com/" tests="491" failures="0"  errors="0"  time="18.62">
        <properties>
            <property name="outcome" value="Passed"/>
            <property name="testsRan" value="491"/>
            <property name="passing" value="491"/>
            <property name="failing" value="0"/>
            <property name="skipped" value="0"/>
            <property name="passRate" value="100%"/>
            <property name="failRate" value="0%"/>
            <property name="testStartTime" value="Dec 5, 2018 9:23 PM"/>
            <property name="testExecutionTime" value="18.62 s"/>
            <property name="testTotalTime" value="17.92 s"/>
            <property name="commandTime" value="17.39 s"/>
            <property name="hostname" value="https://agility-customization-7132-dev-ed.cs40.my.salesforce.com/"/>
            <property name="orgId" value="00D540000004YKKEA2"/>
            <property name="username" value="test-mky8fkqxg2fw@example.com"/>
            <property name="testRunId" value="7075400000U7g5l"/>
            <property name="userId" value="005540000014EE7AAM"/>
        </properties>
        <testcase name="thatAnswerOnlyForTheMethodStubbedWithAnswer" classname="fflib_AnswerTest" time="0.03">
        </testcase>
        <testcase name="thatAnswerOnlyForTheStubbedParameter" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatAnswersWithException" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatAnswerToDifferentVoidMethods" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatAnswerToVoidAndNotVoidMethods" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatAnswerToVoidMethod" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatArgumentListEmptyForMethodWithNoArgument" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatExceptionIsThrownWhenAccessNegativeIndexArgument" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatExceptionIsThrownWhenAccessOutOfIndexArgument" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatMethodsParametersAreAccessible" classname="fflib_AnswerTest" time="0">
        </testcase>
        <testcase name="thatMethodsParametersAreAccessibleWhenCalledWithMatchers" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatMultipleAnswersAreHandled" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatStoresMethodIntoInvocationOnMock" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatStoresMockInstanceIntoInvocationOnMock" classname="fflib_AnswerTest" time="0.01">
        </testcase>
        <testcase name="thatBetweenThrownExceptionIfCalledLessThanAtLeastNumberOfTimes" classname="fflib_AnyOrderTest" time="0.09">
        </testcase>
        <testcase name="thatBetweenThrownExceptionIfCalledLessThanAtLeastNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.02">
        </testcase>
        <testcase name="thatBetweenThrownExceptionIfCalledMoreThanAtMostNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatBetweenThrownExceptionIfCalledMoreThanAtMostNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatCustomMessageIsAdded" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledLessThanAtLeastNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledLessThanAtLeastNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledLessThanAtLeastOnce" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledLessThanAtLeastOnceNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledLessThanAtLeastOnceNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledLessThanAtLeastOnceWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledMoreThanAtMostNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatThrownExceptionIfCalledMoreThanAtMostNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastNumberOfTimesWhenIsCalledMoreTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastNumberOfTimesWhenIsCalledMoreTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnce" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceNumberOfTimesWhenIsCalledMoreTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceNumberOfTimesWhenIsCalledMoreTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceWhenIsCalledMoreTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceWhenIsCalledMoreTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtLeastOnceWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtMostNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtMostNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtMostSameNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesAtMostSameNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesBetweenNumberOfTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifiesBetweenNumberOfTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNeverFailsWhenCalledMoreTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNeverFailsWhenCalledMoreTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesMethodFailsWhenCalledLessTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesMethodFailsWhenCalledLessTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesMethodFailsWhenCalledMoreTimes" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesMethodFailsWhenCalledMoreTimesWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="verifyMethodCallWhenNoCallsBeenMadeForType" classname="fflib_AnyOrderTest" time="0">
        </testcase>
        <testcase name="verifyMethodNotCalled" classname="fflib_AnyOrderTest" time="0">
        </testcase>
        <testcase name="verifyMultipleMethodCallsWithSameSingleArgument" classname="fflib_AnyOrderTest" time="0">
        </testcase>
        <testcase name="verifyNeverMethodHasBeenNotCalledWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="verifyNeverMethodHasNotBeenCalled" classname="fflib_AnyOrderTest" time="0">
        </testcase>
        <testcase name="verifySingleMethodCallWithMultipleArguments" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="verifyTimesMethodHasBeenCalled" classname="fflib_AnyOrderTest" time="0">
        </testcase>
        <testcase name="verifyTimesMethodHasBeenCalledWithMatchers" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyCustomMatchersCanBeUsed" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyMethodNeverCalledMatchersAreReset" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyWithCombinedMatchersShouldReturnCorrectMethodCallCounts" classname="fflib_AnyOrderTest" time="0.01">
        </testcase>
        <testcase name="stubAndVerifyMethodCallsWithNoArguments" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatExceptionIsthrownWhenReturnMultiPassEmptyList" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="thatExceptionIsthrownWhenReturnMultiPassNullList" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="thatExceptionIsthrownWhenStubbingIsNotDone" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatExceptionIsthrownWhenThrowMultiPassEmptyList" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="thatExceptionIsthrownWhenThrowMultiPassNullList" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="thatMultipleInstancesCanBeMockedDependently" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatMultipleInstancesCanBeMockedIndependently" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatMultipleVoidMethodsThrowsMultipleExceptions" classname="fflib_ApexMocksTest" time="0.02">
        </testcase>
        <testcase name="thatNullCanBeUsedAsExceptionvalue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatNullCanBeUsedAsReturnValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingCanBeChainedFirstValueThenException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleMethodsCanBeChainedFirstExceptionThenValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleMethodsCanBeChainedFirstValueThenException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithMultiExceptions" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithMultiValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithSingleException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnMultiWithSingleValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnWithMultiExceptions" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnWithMultiValues" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnWithSingleException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenReturnWithSingleValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithMultiExceptions" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithMultiValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithSingleException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowMultiWithSingleValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowWithMultiExceptions" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowWithMultiValues" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowWithSingleException" classname="fflib_ApexMocksTest" time="0.03">
        </testcase>
        <testcase name="thatStubbingMultipleTimesOverridePreviousThenThrowWithSingleValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMutipleTimesVoidMethodThrowsMultipleExceptionsOverride" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingMutipleTimesVoidMethodThrowsMultipleExceptionsOverrideWithSingleException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingReturnsAndThrowsDifferentValuesAndExceptionsForDifferentCalls" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingReturnsDifferentValuesForDifferentCalls" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingReturnsDifferentValuesForDifferentCallsAndRepeatLastValuesForFurtherCalls" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingThrowsAndReturnsDifferentExceptionsAndValuesForDifferentCalls" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingThrowsDifferentExceptionsForDifferentCalls" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatStubbingThrowsDifferentExceptionsForDifferentCallsAndRepeatLastExceptionForFurtherCalls" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="thatVoidMethodThrowsMultipleExceptions" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="verifyMethodCallsWithSameNameButDifferentArgumentTypes" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="verifyMethodCallWhenNoCallsBeenMadeForType" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="verifyMethodNotCalled" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="verifyMultipleMethodCallsWithDifferentSingleArgument" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="verifyMultipleMethodCallsWithSameSingleArgument" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="verifySingleMethodCallWithMultipleArguments" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="verifySingleMethodCallWithNoArguments" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="verifySingleMethodCallWithSingleArgument" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenMockIsGeneratedCanStubVerify" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenMockIsGeneratedCanVerify" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenSetDoThrowWhenExceptionsValuesAreSet" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="whenStubCallWithNoArgumentsShouldReturnStubbedValue" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="whenStubCustomMatchersCanBeUsed" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubExceptionSameMethodWithMatchersAndNonMatchersShouldStubInOrder" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubExceptionTheExceptionShouldBeThrown" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubExceptionWithMatchersShouldThrowException" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubMultipleCallsWithMatchersShouldReturnExpectedValues" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubMultipleCallsWithMultipleArgumentShouldReturnStubbedValues" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubMultipleCallsWithSingleArgumentShouldReturnStubbedValues" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubMultipleVoidMethodsWithExceptionsThenExceptionsShouldBeThrown" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubNullConcreteArgValueCorrectValueIsReturned" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubSameCallWithDifferentArgumentValueShouldReturnLastStubbedValue" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubSameMethodWithMatchersAndNonMatchersShouldStubInOrder" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubSingleCallWithNullReturnValueItShouldReturnNull" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="whenStubSingleCallWithSingleArgumentShouldReturnStubbedValue" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="whenStubVoidMethodWithExceptionAndCallMethodTwiceThenExceptionShouldBeThrownTwice" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubVoidMethodWithExceptionThenExceptionShouldBeThrown" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenStubWithMatcherAndNonMatcherArgumentsShouldThrowException" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="whenVerifyCustomMatchersCanBeUsed" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyMethodNeverCalledMatchersAreReset" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyWithCombinedMatchersShouldReturnCorrectMethodCallCounts" classname="fflib_ApexMocksTest" time="0.01">
        </testcase>
        <testcase name="whenVerifyWithMatcherAndNonMatcherArgumentsShouldThrowException" classname="fflib_ApexMocksTest" time="0">
        </testcase>
        <testcase name="makeRelationship_returnsObjectsWithRelationFieldSet" classname="fflib_ApexMocksUtilsTest" time="0.23">
        </testcase>
        <testcase name="thatArgumentValueIsCaptured" classname="fflib_ArgumentCaptorTest" time="0.04">
        </testcase>
        <testcase name="thatArgumentValueIsCapturedWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCanHandleMultipleCapturesInOneMethodCall" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCanHandleMultipleCapturesInOneMethodCallWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCanPerformFurtherAssertionsOnCapturedArgumentValue" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCanPerformFurtherAssertionsOnCapturedArgumentValueWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArguments" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArgumentsForTheVerifiedMethods" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArgumentsForTheVerifiedMethodsWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArgumentsFromMultipleMethods" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArgumentsFromMultipleMethodsWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArgumentswhenMethodIsCalledWithTheSameArgument" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureAllArgumentsWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureArgumentFromRequestedParameter" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureArgumentFromRequestedParameterWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureArgumentOnlyFromVerifiedMethod" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureArgumentOnlyFromVerifiedMethodWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureLastArgument" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureLastArgumentWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureOnlyMethodsThatMatchesWithOtherMatcherAsWell" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatCaptureOnlyMethodsThatMatchesWithOtherMatcherAsWellWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatDoesNotCaptureAnythingWhenCaptorIsWrappedInAMatcher" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatDoesNotCaptureAnythingWhenCaptorIsWrappedInAMatcherWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatDoesNotCaptureIfNotVerified" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="thatDoesNotCaptureIfNotVerifiedWithInOrderVerification" classname="fflib_ArgumentCaptorTest" time="0.01">
        </testcase>
        <testcase name="itShouldGenerateValidIDs" classname="fflib_IDGeneratorTest" time="0.21">
        </testcase>
        <testcase name="canInstantiateMultipleInterfaceInheritor" classname="fflib_InheritorTest" time="0.03">
        </testcase>
        <testcase name="canStubMultipleInterfaceInheritor" classname="fflib_InheritorTest" time="0.01">
        </testcase>
        <testcase name="thatMixedVerificationDoNotInterfierWithOtherImplementationChecking" classname="fflib_InOrderTest" time="0.03">
        </testcase>
        <testcase name="thatStrictVerificationCanBeEnforced" classname="fflib_InOrderTest" time="0.02">
        </testcase>
        <testcase name="thatStrictVerificationCanBeEnforcedWithOldNotation" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatStrictVerificationCanBeEnforcedWithOldNotationUsingDefaultTimesOne" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatStrictVerificationCanBePerformed" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatTimesOneIsTheDefaultVerification" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastConsumeAllTheInstances" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastConsumeAllTheInstancesForOnlyTheMethodVerified" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastConsumesAllTheInstances2" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastOnce" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastOnceConsumesAllTheInstances" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastOnceConsumesInstancesUntilLastMethodVerified" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastOnceThrowsErrorIfCalledLessTimes" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastPassWithMoreCallsThenAsserted" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastPassWithSameCallsOfAssertion" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtLeastThrowsErrorIfCalledLessTimes" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyAtMostThrowsExceptionBecauseNotImplemented" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyBetweenThrowsExceptionBecauseNotImplemented" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderAllTheMethodsCalled" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCallMethodWithMatches" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCallMethodWithMatchesFailsIfVerifyACallAlreadyInTheMatcher" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCallMethodWithMultipleMatches" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCallMethodWithMultipleMatchesMixed" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCallMethodWithMultipleMatchesMixedFailWhenMatcherHaveAlreadyVerifiedMethod" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCanHandleMixedInOrderInstance" classname="fflib_InOrderTest" time="0.02">
        </testcase>
        <testcase name="thatVerifyInOrderCanHandleMultipleMethodsCalls" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCanHandleMultipleMethodsCallsAndNotFailsIfVerifyCountIsGreaterThenExpected" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCanHandleMultipleMethodsCallsButFailsIfVerifyCountIsLessThenExpected" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderCanHandleMultipleMocks" classname="fflib_InOrderTest" time="0.02">
        </testcase>
        <testcase name="thatVerifyInOrderCanSkipMethodsCalledUntilFindTheOneThatNeedsVerify" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderDifferentMethodsCalledWithSameArguments" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderDifferentMethodsCalledWithSameArgumentsDoubleCallFail" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderDifferentMethodsCalledWithSameArgumentsOrderFail" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderThrownExceptionIfVerifyMockInstanceNotInTheSet" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyInOrderThrownExceptionWithCustomMessage" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNever" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNeverFailsWhenCalled" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNeverFailsWhenCalledWithMatchers" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNeverWithMatchers" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNoInteractionsFails" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNoInteractionsPass" classname="fflib_InOrderTest" time="0">
        </testcase>
        <testcase name="thatVerifyNoMoreInteractionsFails" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNoMoreInteractionsFailsWhenNoInteracionOccurs" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNoMoreInteractionsFailsWhenOnLyOneMethodLeft" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyNoMoreInteractionsPass" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyThrowsExceptionWhenCallsIsInvochedFromStandardMock" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimes" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls2" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls3" classname="fflib_InOrderTest" time="0.02">
        </testcase>
        <testcase name="thatVerifyTimesPassWhenAnotherMethodIsCalledBetweenMethodsCalls4" classname="fflib_InOrderTest" time="0.02">
        </testcase>
        <testcase name="thatVerifyTimesThrowsExceptionIfCalledLessTimesThanExpected" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesThrowsExceptionIfCalledMoreTimesThanExpected" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatVerifyTimesThrowsExceptionWhenAnotherMethodIsCalledBetweenMethodsCalls" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatWithOldNotation" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatWithOldNotationPassWhenAnotherMethodIsCalledBetweenMethodsCalls" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatWithOldNotationThrowsExceptionIfCalledLessTimesThanExpected" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatWithOldNotationThrowsExceptionIfCalledMoreTimesThanExpected" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="thatWithOldNotationThrowsExceptionWhenAnotherMethodIsCalledBetweenMethodsCalls" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="verifyAtLeastAndCapture" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="verifyCallsAndCapture" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="verifyTimesAndCaptor" classname="fflib_InOrderTest" time="0.01">
        </testcase>
        <testcase name="constructDatetimeAfter_WithNullFromDatetime_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.25">
        </testcase>
        <testcase name="constructDatetimeAfter_WithNullInclusive_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDatetimeBefore_WithNullInclusive_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.11">
        </testcase>
        <testcase name="constructDatetimeBefore_WithNullToDatetime_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDatetimeBetween_WithNullFromDatetime_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDatetimeBetween_WithNullInclusiveFrom_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDatetimeBetween_WithNullInclusiveTo_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.09">
        </testcase>
        <testcase name="constructDatetimeBetween_WithNullToDatetime_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructDecimalBetween_WithNullInclusiveLower_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDecimalBetween_WithNullInclusiveUpper_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructDecimalBetween_WithNullLower_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructDecimalBetween_WithNullUpper_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructDecimalLessThan_WithNullInclusive_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructDecimalLessThan_WithNullToMatch_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDecimalMoreThan_WithNullInclusive_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructDecimalMoreThan_WithNullToMatch_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructEq_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructFieldSetEquivalentTo_WithNullFieldSet_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.09">
        </testcase>
        <testcase name="constructRefEq_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructSObjectOfType_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructSObjectWithId_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructSObjectWithName_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructSObjectWith_WithEmptyArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructSObjectWith_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructStringContains_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructStringEndsWith_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="constructStringMatches_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="constructStringStartsWith_WithNullArg_ThrowsException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="whenAnyBooleanMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyDateMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyDatetimeMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="whenAnyDecimalMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyDoubleMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyFieldSetMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="1.34">
        </testcase>
        <testcase name="whenAnyIdMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyIntegerMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyListMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.09">
        </testcase>
        <testcase name="whenAnyLongMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyObjectMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnySObjectFieldMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnySObjectMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnySObjectTypeMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenAnyStringMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenCombinedMatchesWithAllExpressionShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenCombinedMatchesWithAtLeastOneExpressionShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenCombinedMatchesWithNoneExpressionShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenConstructingCombinedWithEmptyInternalMatchersShouldThrowException" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenConstructingCombinedWithNullConnectiveExpressionShouldThrowException" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="whenConstructingCombinedWithNullInternalMatchersShouldThrowException" classname="fflib_MatcherDefinitionsTest" time="0.1">
        </testcase>
        <testcase name="whenDatetimeAfterMatchesWithInclusiveShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenDatetimeAfterMatchesWithoutInclusiveShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenDatetimeBeforeMatchesWithInclusiveShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenDatetimeBeforeMatchesWithoutInclusiveShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenDatetimeBetweenMatchesWithInclusiveFromWithoutInclusiveToShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenDatetimeBetweenMatchesWithInclusiveToWithoutInclusiveFromShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenDecimalBetweenMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="whenDecimalLessThanMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="whenDecimalMoreThanMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenEqMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenFieldSetEquivalentToMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.23">
        </testcase>
        <testcase name="whenFieldSetEquivalentToWithoutFieldSetShouldNeverMatch" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenIsBlankWithMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenIsNotBlankWithMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenIsNotNullMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenIsNullMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenListContainsMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenListIsEmptyMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenRefEqMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenSObjectOfTypeMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenSObjectsInAnyOrderWithMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.1">
        </testcase>
        <testcase name="whenSObjectsWithInOrderMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenSObjectWithIdMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenSObjectWithMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenSObjectWithNameMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="whenStringContainsMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenStringEndsWithMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.07">
        </testcase>
        <testcase name="whenStringMatchesMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.12">
        </testcase>
        <testcase name="whenStringStartsWithMatchesShouldReturnCorrectResults" classname="fflib_MatcherDefinitionsTest" time="0.08">
        </testcase>
        <testcase name="allOfWith2ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.01">
        </testcase>
        <testcase name="allOfWith3ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="allOfWith4ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="allOfWithEmptyArgsThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="allOfWithListArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="allOfWithNoArgsThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="allOfWithoutRegisteringInnerMatchersThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyBooleanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyDateRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyDatetimeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyDecimalRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyDoubleRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyFieldSetRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyIdRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyIntegerRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyListRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyLongRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyObjectRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyOfWith2ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyOfWith3ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyOfWith4ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyOfWithListArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anySObjectFieldRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anySObjectRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anySObjectTypeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="anyStringRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="dateAfterRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="dateBeforeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="dateBetweenRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="datetimeAfterRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="datetimeBeforeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="datetimeBetweenRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="decimalBetweenRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="decimalLessThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="decimalMoreThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="doubleBetweenRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="doubleLessThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="doubleMoreThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqBooleanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqDateRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqDatetimeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqDecimalRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqDoubleRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqIdRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqIntegerRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqListRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqLongRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="eqSObjectFieldRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.04">
        </testcase>
        <testcase name="eqSObjectTypeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.01">
        </testcase>
        <testcase name="eqStringRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="fieldSetEquivalentToRegistersCorrectMatcherType" classname="fflib_MatchTest" time="2.39">
        </testcase>
        <testcase name="fieldSetEquivalentWithNullFieldSetThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="integerBetweenRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="integerLessThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="integerMoreThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="isNotNullRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="isNotRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="isNullRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="listContainsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="listIsEmptyRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="longBetweenRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="longLessThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="longMoreThanRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="noneOfWith2ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="noneOfWith3ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="noneOfWith4ArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="noneOfWithListArgsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="refEqRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="sObjectOfTypeRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.01">
        </testcase>
        <testcase name="sObjectsWithMatchInOrderRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.01">
        </testcase>
        <testcase name="sObjectsWithRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.01">
        </testcase>
        <testcase name="sObjectWithIdRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="sObjectWithNameRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="sObjectWithRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0.01">
        </testcase>
        <testcase name="stringContainsRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="stringEndsWithRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="stringIsBlankRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="stringIsNotBlankRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="stringMatchesRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="stringStartsWithRegistersCorrectMatcherType" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithDifferentSizeArgValuesAndMatchersThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithManyMatchesReturnsTrue" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithManyMismatchesReturnsFalse" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithMatchesAndMismatchesReturnsFalse" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithNullMatchersThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithNullMethodArgsArgValuesThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithNullMethodArgsThrowsException" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithOneMatchReturnsTrue" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesAllArgsWithOneMismatchReturnsFalse" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesWithOneMatcherRegistersMatcher" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesWithOneMatcherReturnsNull" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="whenMatchesWithOneMatcherSetsMatchingToTrue" classname="fflib_MatchTest" time="0">
        </testcase>
        <testcase name="equalsReturnsExpectedResults" classname="fflib_MethodArgValuesTest" time="0.01">
        </testcase>
        <testcase name="hashCodeReturnsExpectedResults" classname="fflib_MethodArgValuesTest" time="0">
        </testcase>
        <testcase name="equalsReturnsExpectedResults" classname="fflib_QualifiedMethodTest" time="0.01">
        </testcase>
        <testcase name="equalsReturnsExpectedResultsForHasDependentMocks" classname="fflib_QualifiedMethodTest" time="0.01">
        </testcase>
        <testcase name="hashCodeReturnsExpectedResults" classname="fflib_QualifiedMethodTest" time="0">
        </testcase>
        <testcase name="hashCodeReturnsExpectedResultsForHasDependentMocks" classname="fflib_QualifiedMethodTest" time="0">
        </testcase>
        <testcase name="toStringReturnsExpectedResult" classname="fflib_QualifiedMethodTest" time="0">
        </testcase>
        <testcase name="addChildQueriesWithChildRelationshipNoAccessibleCheck_fail" classname="fflib_QueryFactoryTest" time="0.26">
        </testcase>
        <testcase name="addChildQueriesWithChildRelationshipNoAccessibleCheck_success" classname="fflib_QueryFactoryTest" time="0.15">
        </testcase>
        <testcase name="addChildQueriesWithChildRelationshipObjCheckIsAccessible_success" classname="fflib_QueryFactoryTest" time="0.09">
        </testcase>
        <testcase name="addChildQueriesWithChildRelationshipObj_success" classname="fflib_QueryFactoryTest" time="0.09">
        </testcase>
        <testcase name="addChildQueriesWithChildRelationship_success" classname="fflib_QueryFactoryTest" time="0.08">
        </testcase>
        <testcase name="addChildQueries_invalidChildRelationship" classname="fflib_QueryFactoryTest" time="0.07">
        </testcase>
        <testcase name="addChildQueries_invalidChildRelationshipTooDeep" classname="fflib_QueryFactoryTest" time="0.06">
        </testcase>
        <testcase name="addChildQueries_success" classname="fflib_QueryFactoryTest" time="0.08">
        </testcase>
        <testcase name="addChildQuerySameRelationshipAgain_success" classname="fflib_QueryFactoryTest" time="0.25">
        </testcase>
        <testcase name="checkFieldObjectReadSort_success" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="checkFieldRead_fail" classname="fflib_QueryFactoryTest" time="0.27">
        </testcase>
        <testcase name="checkObjectRead_fail" classname="fflib_QueryFactoryTest" time="0.12">
        </testcase>
        <testcase name="deepCloneBasic" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="deepCloneBasicNoChanges" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="deepCloneSubquery" classname="fflib_QueryFactoryTest" time="0.02">
        </testcase>
        <testcase name="deepCloneSubqueryNoChanges" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="deterministic_toSOQL" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="duplicateFieldSelection" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="equalityCheck" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="fieldSelections" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="invalidCrossObjectField" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="invalidFields_noQueryField" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="invalidFields_nullToken" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="invalidFields_string" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="invalidFieldTests" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="invalidField_nullToken" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="invalidField_string" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="nonReferenceField" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="ordering" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="queryFieldsNotEquals" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="queryWith_noFields" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="setOrdering_ReplacesPreviousOrderingsWithExpectedOrdering" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="simpleFieldCondition" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="simpleFieldSelection" classname="fflib_QueryFactoryTest" time="0">
        </testcase>
        <testcase name="testSoql_unsortedSelectFields" classname="fflib_QueryFactoryTest" time="0.01">
        </testcase>
        <testcase name="readonly_field_access" classname="fflib_SecurityUtilsTest" time="0.28">
        </testcase>
        <testcase name="readonly_objectAndField_access" classname="fflib_SecurityUtilsTest" time="0.12">
        </testcase>
        <testcase name="readonly_object_access" classname="fflib_SecurityUtilsTest" time="0.12">
        </testcase>
        <testcase name="sysadmin_objectAndField_access" classname="fflib_SecurityUtilsTest" time="0.12">
        </testcase>
        <testcase name="FieldsMap" classname="fflib_SObjectDescribeTest" time="0.02">
        </testcase>
        <testcase name="flushCache" classname="fflib_SObjectDescribeTest" time="0.01">
        </testcase>
        <testcase name="getAccountDescribes" classname="fflib_SObjectDescribeTest" time="0.01">
        </testcase>
        <testcase name="getDescribe_badInput" classname="fflib_SObjectDescribeTest" time="0">
        </testcase>
        <testcase name="GlobalDescribeMap" classname="fflib_SObjectDescribeTest" time="0">
        </testcase>
        <testcase name="NamespacedAttributeMap_implementations" classname="fflib_SObjectDescribeTest" time="0.28">
        </testcase>
        <testcase name="rawGlobalDescribeCheck" classname="fflib_SObjectDescribeTest" time="0.01">
        </testcase>
        <testcase name="simpleAccountFieldDescribe" classname="fflib_SObjectDescribeTest" time="0">
        </testcase>
        <testcase name="simpleAccountFieldSetDescribe" classname="fflib_SObjectDescribeTest" time="0">
        </testcase>
        <testcase name="simpleAccountGetNameField" classname="fflib_SObjectDescribeTest" time="0.01">
        </testcase>
        <testcase name="testDisableTriggerEventsBehaviour" classname="fflib_SObjectDomainTest" time="0.05">
        </testcase>
        <testcase name="testErrorLogging" classname="fflib_SObjectDomainTest" time="0">
        </testcase>
        <testcase name="testInsertValidationFailedWithoutDML" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testObjectSecurity" classname="fflib_SObjectDomainTest" time="0.16">
        </testcase>
        <testcase name="testOnAfterUndeleteWithoutDML" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testOnBeforeDeleteWithoutDML" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testOnValidateBehaviorDefault" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testOnValidateBehaviorOld" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testRecursiveTriggerState" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testTriggerState" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testUpdateValidationFailedWithoutDML" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testValidationWithoutDML" classname="fflib_SObjectDomainTest" time="0.01">
        </testcase>
        <testcase name="testDerivedUnitOfWork_CommitDMLFail" classname="fflib_SObjectUnitOfWorkTest" time="0.16">
        </testcase>
        <testcase name="testDerivedUnitOfWork_CommitDoWorkFail" classname="fflib_SObjectUnitOfWorkTest" time="0.06">
        </testcase>
        <testcase name="testDerivedUnitOfWork_CommitSuccess" classname="fflib_SObjectUnitOfWorkTest" time="1.51">
        </testcase>
        <testcase name="testRegisterDirty_ExpectReplacement" classname="fflib_SObjectUnitOfWorkTest" time="0.04">
        </testcase>
        <testcase name="testRegisterDirty_field" classname="fflib_SObjectUnitOfWorkTest" time="0.04">
        </testcase>
        <testcase name="testUnitOfWorkEmail" classname="fflib_SObjectUnitOfWorkTest" time="0.09">
        </testcase>
        <testcase name="testUnitOfWorkNewDirtyDelete" classname="fflib_SObjectUnitOfWorkTest" time="1.2">
        </testcase>
        <testcase name="testCommaDelimitedBuilder1" classname="fflib_StringBuilderTest" time="0.01">
        </testcase>
        <testcase name="testCommaDelimitedBuilder2" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testCommanDelimitedBuilderWithAlternativeDelimiter" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testCommanDelimitedBuilderWithAlternativeDelimiterAndPrefix" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testCommanDelimitedBuilderWithItemPrefix" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testfflib_StringBuilder1" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testfflib_StringBuilder2" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testFieldListBuilder" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="testMultiCurrencyFieldListBuilder" classname="fflib_StringBuilderTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithCombinedMatcher_ShouldPass" classname="fflib_SystemTest" time="0.03">
        </testcase>
        <testcase name="assertEquals_WithCustomMessage_WithCombinedMatcher_ShouldPass" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithCustomMessage_WithMatch_ShouldPass" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithCustomMessage_WithMismatch_ShouldThrowException" classname="fflib_SystemTest" time="0.01">
        </testcase>
        <testcase name="assertEquals_WithCustomMessage_WithNoMatchers_ShouldThrowException" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithCustomMessage_WithTooManyMatchers_ShouldThrowException" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithMatch_ShouldPass" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithMismatch_ShouldThrowException" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithNoMatchers_ShouldThrowException" classname="fflib_SystemTest" time="0">
        </testcase>
        <testcase name="assertEquals_WithTooManyMatchers_ShouldThrowException" classname="fflib_SystemTest" time="0">
        </testcase>
    </testsuite>
</testsuites>
